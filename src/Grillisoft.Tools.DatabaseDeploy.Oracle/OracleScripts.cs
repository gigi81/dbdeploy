using Grillisoft.Tools.DatabaseDeploy.SqlServer;

namespace Grillisoft.Tools.DatabaseDeploy.Oracle;

public class OracleScripts(string schema, string migrationTableName) : ISqlScripts
{
    public string SetSchemaSql { get; } = $"alter session set current_schema = {schema.ToUpperInvariant()}";
    
    public string ExistsSql { get; } = $@"
        SELECT CAST(COUNT(*) as INT) AS count FROM all_users WHERE username = '{schema.ToUpperInvariant()}'
        ";

    public string CreateSql { get; } = $@"
        CREATE USER {schema} IDENTIFIED BY ""{schema}""
                       DEFAULT TABLESPACE users
                       QUOTA UNLIMITED ON users
        ";

    public string GrantSql { get; } = $@"
        GRANT CREATE MATERIALIZED VIEW,
              CREATE PROCEDURE,
              CREATE SEQUENCE,
              CREATE SESSION,
              CREATE SYNONYM,
              CREATE TABLE,
              CREATE TRIGGER,
              CREATE TYPE,
              CREATE VIEW
          TO {schema}
        ";
    
    public string GetSql { get; } =
        $"SELECT name, deployed_utc, user_name, hash FROM {migrationTableName} ORDER BY id ASC";
    public string AddSql { get; } =
        $@"INSERT INTO {migrationTableName}(name, deployed_utc, user_name, hash)
                     VALUES(:name, :deployed_utc, :user_name, :hash)";
    public string RemoveSql { get; } =
        $"DELETE FROM {migrationTableName} WHERE name = :name";

    public string InitSql { get; } = $@"
            CREATE TABLE {migrationTableName} (
                id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                name NVARCHAR2(255),
                deployed_utc TIMESTAMP WITH TIME ZONE,
                user_name NVARCHAR2(100),
                hash CHAR(32),
                CONSTRAINT unique_migration_name UNIQUE (name)
            )
        ";

    public string MigrationTableExistsSql { get; } = $@"
        SELECT CAST(COUNT(*) AS INT) AS count 
        FROM ALL_OBJECTS
        WHERE OBJECT_TYPE = 'TABLE'
            AND OWNER = '{schema.ToUpperInvariant()}'
            AND OBJECT_NAME = '{migrationTableName.ToUpperInvariant()}'
        ";
    
    public string ClearSql { get; } = $@"
        DROP TABLE {migrationTableName}
        ";
}